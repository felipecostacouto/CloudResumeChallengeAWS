name: Cloud Resume Challenge

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U pytest boto3

      - name: Run Python Tests
        run: pytest

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Cypress Dependencies
        run: |
          npm install

  deploy:
    needs: test 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync S3 Bucket
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --follow-symlinks --delete --exclude '.git/*' --size-only
        env:
          AWS_S3_BUCKET: $(terraform output -raw s3_bucket_name)
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'sa-east-1'
          SOURCE_DIR: 'frontEnd'

  invalidate-cloudfront-distribution:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: $(terraform output -raw cloudfront_distribution_id)
          PATHS: "/*"
          AWS_REGION: "sa-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  update-script:
    needs: invalidate-cloudfront-distribution
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve API Gateway URL
        id: api_url
        run: echo "API_URL=$(terraform output -raw api_url)" >> $GITHUB_ENV

      - name: Update script.js with API URL
        run: |
          sed -i 's|PLACEHOLDER_URL|${{ env.API_URL }}|' frontEnd/script.js

      - name: Sync Updated Script
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --follow-symlinks --delete --exclude '.git/*' --size-only
        env:
          AWS_S3_BUCKET: $(terraform output -raw s3_bucket_name)
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'sa-east-1'
          SOURCE_DIR: 'frontEnd'
          
  cypress-tests:
    needs: update-script
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Cypress Dependencies
        run: |
          npm install

      - name: Run Cypress Tests
        run: |
          npx cypress run --headless  # Run tests in headless mode
        env:
          API_URL: ${{ env.API_URL }}
